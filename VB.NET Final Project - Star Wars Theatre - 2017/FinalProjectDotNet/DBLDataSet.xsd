<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DBLDataSet" targetNamespace="http://tempuri.org/DBLDataSet.xsd" xmlns:mstns="http://tempuri.org/DBLDataSet.xsd" xmlns="http://tempuri.org/DBLDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="dbConn" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dbConn (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FinalProjectDotNet.My.MySettings.GlobalReference.Default.dbConn" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="datMoviesTableAdapter" GeneratorDataComponentClassName="datMoviesTableAdapter" Name="datMovies" UserDataComponentName="datMoviesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbConn (MySettings)" DbObjectName="dbo.datMovies" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[datMovies] WHERE (([movieID] = @Original_movieID) AND ([movieName] = @Original_movieName) AND ([displayOrder] = @Original_displayOrder) AND ([isActive] = @Original_isActive))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_movieName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="movieName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_displayOrder" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displayOrder" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_isActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[datMovies] ([movieName], [displayOrder], [isActive]) VALUES (@movieName, @displayOrder, @isActive);
SELECT movieID, movieName, displayOrder, isActive FROM datMovies WHERE (movieID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@movieName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="movieName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@displayOrder" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displayOrder" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT movieID, movieName, displayOrder, isActive FROM dbo.datMovies</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[datMovies] SET [movieName] = @movieName, [displayOrder] = @displayOrder, [isActive] = @isActive WHERE (([movieID] = @Original_movieID) AND ([movieName] = @Original_movieName) AND ([displayOrder] = @Original_displayOrder) AND ([isActive] = @Original_isActive));
SELECT movieID, movieName, displayOrder, isActive FROM datMovies WHERE (movieID = @movieID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@movieName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="movieName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@displayOrder" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displayOrder" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_movieName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="movieName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_displayOrder" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="displayOrder" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_isActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="movieID" ColumnName="movieID" DataSourceName="[36D99E593578A584B2270D7A651AFA2C_ER 2017 CLASSES\VB DOT NET\VISUAL STUDIO PROJECTS\FINALPROJECTDOTNET\FINALPROJECTDOTNET\DBL.MDF].dbo.datMovies" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@movieID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="movieID" DataSetColumn="movieID" />
              <Mapping SourceColumn="movieName" DataSetColumn="movieName" />
              <Mapping SourceColumn="displayOrder" DataSetColumn="displayOrder" />
              <Mapping SourceColumn="isActive" DataSetColumn="isActive" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="datMovieTimesTableAdapter" GeneratorDataComponentClassName="datMovieTimesTableAdapter" Name="datMovieTimes" UserDataComponentName="datMovieTimesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbConn (MySettings)" DbObjectName="dbo.datMovieTimes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[datMovieTimes] WHERE (([showingID] = @Original_showingID) AND ([movieID] = @Original_movieID) AND ([dateTime] = @Original_dateTime) AND ([isActive] = @Original_isActive))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_showingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="showingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_isActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[datMovieTimes] ([movieID], [dateTime], [isActive]) VALUES (@movieID, @dateTime, @isActive);
SELECT showingID, movieID, dateTime, isActive FROM datMovieTimes WHERE (showingID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT showingID, movieID, dateTime, isActive FROM dbo.datMovieTimes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[datMovieTimes] SET [movieID] = @movieID, [dateTime] = @dateTime, [isActive] = @isActive WHERE (([showingID] = @Original_showingID) AND ([movieID] = @Original_movieID) AND ([dateTime] = @Original_dateTime) AND ([isActive] = @Original_isActive));
SELECT showingID, movieID, dateTime, isActive FROM datMovieTimes WHERE (showingID = @showingID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_showingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="showingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_movieID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="movieID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_isActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="showingID" ColumnName="showingID" DataSourceName="[36D99E593578A584B2270D7A651AFA2C_ER 2017 CLASSES\VB DOT NET\VISUAL STUDIO PROJECTS\FINALPROJECTDOTNET\FINALPROJECTDOTNET\DBL.MDF].dbo.datMovieTimes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@showingID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="showingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="showingID" DataSetColumn="showingID" />
              <Mapping SourceColumn="movieID" DataSetColumn="movieID" />
              <Mapping SourceColumn="dateTime" DataSetColumn="dateTime" />
              <Mapping SourceColumn="isActive" DataSetColumn="isActive" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="datTicketsSoldTableAdapter" GeneratorDataComponentClassName="datTicketsSoldTableAdapter" Name="datTicketsSold" UserDataComponentName="datTicketsSoldTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbConn (MySettings)" DbObjectName="dbo.datTicketsSold" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[datTicketsSold] WHERE (([ticketID] = @Original_ticketID) AND ([showingID] = @Original_showingID) AND ([seatNo] = @Original_seatNo) AND ([isPaid] = @Original_isPaid) AND ((@IsNull_Attendee = 1 AND [Attendee] IS NULL) OR ([Attendee] = @Original_Attendee)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ticketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticketID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_showingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="showingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_isPaid" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isPaid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Attendee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Attendee" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Attendee" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Attendee" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[datTicketsSold] ([showingID], [seatNo], [isPaid], [Attendee]) VALUES (@showingID, @seatNo, @isPaid, @Attendee);
SELECT ticketID, showingID, seatNo, isPaid, Attendee FROM datTicketsSold WHERE (ticketID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@showingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="showingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isPaid" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isPaid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Attendee" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Attendee" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ticketID, showingID, seatNo, isPaid, Attendee FROM dbo.datTicketsSold</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[datTicketsSold] SET [showingID] = @showingID, [seatNo] = @seatNo, [isPaid] = @isPaid, [Attendee] = @Attendee WHERE (([ticketID] = @Original_ticketID) AND ([showingID] = @Original_showingID) AND ([seatNo] = @Original_seatNo) AND ([isPaid] = @Original_isPaid) AND ((@IsNull_Attendee = 1 AND [Attendee] IS NULL) OR ([Attendee] = @Original_Attendee)));
SELECT ticketID, showingID, seatNo, isPaid, Attendee FROM datTicketsSold WHERE (ticketID = @ticketID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@showingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="showingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isPaid" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isPaid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Attendee" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Attendee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ticketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticketID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_showingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="showingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seatNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_isPaid" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isPaid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Attendee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Attendee" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Attendee" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Attendee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ticketID" ColumnName="ticketID" DataSourceName="[36D99E593578A584B2270D7A651AFA2C_ER 2017 CLASSES\VB DOT NET\VISUAL STUDIO PROJECTS\FINALPROJECTDOTNET\FINALPROJECTDOTNET\DBL.MDF].dbo.datTicketsSold" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ticketID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ticketID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ticketID" DataSetColumn="ticketID" />
              <Mapping SourceColumn="showingID" DataSetColumn="showingID" />
              <Mapping SourceColumn="seatNo" DataSetColumn="seatNo" />
              <Mapping SourceColumn="isPaid" DataSetColumn="isPaid" />
              <Mapping SourceColumn="Attendee" DataSetColumn="Attendee" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DBLDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DBLDataSet" msprop:Generator_UserDSName="DBLDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="datMovies" msprop:Generator_TableClassName="datMoviesDataTable" msprop:Generator_TableVarName="tabledatMovies" msprop:Generator_TablePropName="datMovies" msprop:Generator_RowDeletingName="datMoviesRowDeleting" msprop:Generator_RowChangingName="datMoviesRowChanging" msprop:Generator_RowEvHandlerName="datMoviesRowChangeEventHandler" msprop:Generator_RowDeletedName="datMoviesRowDeleted" msprop:Generator_UserTableName="datMovies" msprop:Generator_RowChangedName="datMoviesRowChanged" msprop:Generator_RowEvArgName="datMoviesRowChangeEvent" msprop:Generator_RowClassName="datMoviesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="movieID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnmovieID" msprop:Generator_ColumnPropNameInRow="movieID" msprop:Generator_ColumnPropNameInTable="movieIDColumn" msprop:Generator_UserColumnName="movieID" type="xs:int" />
              <xs:element name="movieName" msprop:Generator_ColumnVarNameInTable="columnmovieName" msprop:Generator_ColumnPropNameInRow="movieName" msprop:Generator_ColumnPropNameInTable="movieNameColumn" msprop:Generator_UserColumnName="movieName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="displayOrder" msprop:Generator_ColumnVarNameInTable="columndisplayOrder" msprop:Generator_ColumnPropNameInRow="displayOrder" msprop:Generator_ColumnPropNameInTable="displayOrderColumn" msprop:Generator_UserColumnName="displayOrder" type="xs:int" />
              <xs:element name="isActive" msprop:Generator_ColumnVarNameInTable="columnisActive" msprop:Generator_ColumnPropNameInRow="isActive" msprop:Generator_ColumnPropNameInTable="isActiveColumn" msprop:Generator_UserColumnName="isActive" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="datMovieTimes" msprop:Generator_TableClassName="datMovieTimesDataTable" msprop:Generator_TableVarName="tabledatMovieTimes" msprop:Generator_TablePropName="datMovieTimes" msprop:Generator_RowDeletingName="datMovieTimesRowDeleting" msprop:Generator_RowChangingName="datMovieTimesRowChanging" msprop:Generator_RowEvHandlerName="datMovieTimesRowChangeEventHandler" msprop:Generator_RowDeletedName="datMovieTimesRowDeleted" msprop:Generator_UserTableName="datMovieTimes" msprop:Generator_RowChangedName="datMovieTimesRowChanged" msprop:Generator_RowEvArgName="datMovieTimesRowChangeEvent" msprop:Generator_RowClassName="datMovieTimesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="showingID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnshowingID" msprop:Generator_ColumnPropNameInRow="showingID" msprop:Generator_ColumnPropNameInTable="showingIDColumn" msprop:Generator_UserColumnName="showingID" type="xs:int" />
              <xs:element name="movieID" msprop:Generator_ColumnVarNameInTable="columnmovieID" msprop:Generator_ColumnPropNameInRow="movieID" msprop:Generator_ColumnPropNameInTable="movieIDColumn" msprop:Generator_UserColumnName="movieID" type="xs:int" />
              <xs:element name="dateTime" msprop:Generator_ColumnVarNameInTable="columndateTime" msprop:Generator_ColumnPropNameInRow="dateTime" msprop:Generator_ColumnPropNameInTable="dateTimeColumn" msprop:Generator_UserColumnName="dateTime" type="xs:dateTime" />
              <xs:element name="isActive" msprop:Generator_ColumnVarNameInTable="columnisActive" msprop:Generator_ColumnPropNameInRow="isActive" msprop:Generator_ColumnPropNameInTable="isActiveColumn" msprop:Generator_UserColumnName="isActive" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="datTicketsSold" msprop:Generator_TableClassName="datTicketsSoldDataTable" msprop:Generator_TableVarName="tabledatTicketsSold" msprop:Generator_TablePropName="datTicketsSold" msprop:Generator_RowDeletingName="datTicketsSoldRowDeleting" msprop:Generator_RowChangingName="datTicketsSoldRowChanging" msprop:Generator_RowEvHandlerName="datTicketsSoldRowChangeEventHandler" msprop:Generator_RowDeletedName="datTicketsSoldRowDeleted" msprop:Generator_UserTableName="datTicketsSold" msprop:Generator_RowChangedName="datTicketsSoldRowChanged" msprop:Generator_RowEvArgName="datTicketsSoldRowChangeEvent" msprop:Generator_RowClassName="datTicketsSoldRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ticketID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnticketID" msprop:Generator_ColumnPropNameInRow="ticketID" msprop:Generator_ColumnPropNameInTable="ticketIDColumn" msprop:Generator_UserColumnName="ticketID" type="xs:int" />
              <xs:element name="showingID" msprop:Generator_ColumnVarNameInTable="columnshowingID" msprop:Generator_ColumnPropNameInRow="showingID" msprop:Generator_ColumnPropNameInTable="showingIDColumn" msprop:Generator_UserColumnName="showingID" type="xs:int" />
              <xs:element name="seatNo" msprop:Generator_ColumnVarNameInTable="columnseatNo" msprop:Generator_ColumnPropNameInRow="seatNo" msprop:Generator_ColumnPropNameInTable="seatNoColumn" msprop:Generator_UserColumnName="seatNo" type="xs:int" />
              <xs:element name="isPaid" msprop:Generator_ColumnVarNameInTable="columnisPaid" msprop:Generator_ColumnPropNameInRow="isPaid" msprop:Generator_ColumnPropNameInTable="isPaidColumn" msprop:Generator_UserColumnName="isPaid" type="xs:boolean" />
              <xs:element name="Attendee" msprop:Generator_ColumnVarNameInTable="columnAttendee" msprop:Generator_ColumnPropNameInRow="Attendee" msprop:Generator_ColumnPropNameInTable="AttendeeColumn" msprop:Generator_UserColumnName="Attendee" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:datMovies" />
      <xs:field xpath="mstns:movieID" />
    </xs:unique>
    <xs:unique name="datMovieTimes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:datMovieTimes" />
      <xs:field xpath="mstns:showingID" />
    </xs:unique>
    <xs:unique name="datTicketsSold_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:datTicketsSold" />
      <xs:field xpath="mstns:ticketID" />
    </xs:unique>
  </xs:element>
</xs:schema>